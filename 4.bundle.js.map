{"version":3,"sources":["webpack:///./src/prop-types.prop.js","webpack:///./src/components/header/header.jsx","webpack:///./src/hocs/with-loading/with-loading.jsx","webpack:///./src/components/card/card.jsx","webpack:///./src/components/cards-list/cards-list.jsx","webpack:///./src/store/favorites/selectors.js","webpack:///./src/components/footer/footer.jsx","webpack:///./src/components/favorites-empty/favorites-empty.jsx","webpack:///./src/store/favorites/operations.js","webpack:///./src/components/favorites-location/favorites-location.jsx","webpack:///./src/components/favorites/favorites.jsx","webpack:///./src/components/pages/favorites-page/favorites-page.jsx"],"names":["offerPropTypes","images","PropTypes","arrayOf","string","isRequired","isPremium","bool","title","isFavorite","rating","number","type","bedrooms","maxAdults","price","goods","host","shape","avatarUrl","id","isPro","name","description","reviewPropTypes","comment","date","user","cardPropTypes","previewImage","city","authInfoPropTypes","email","styles","border","backgroundColor","Header","isAuth","onLogout","className","to","src","alt","width","height","style","backgroundImage","onClick","data-testid","propTypes","func","mapDispatchToProps","logout","compose","connect","state","getUser","withAuth","withLoading","Component","WithLoading","props","isLoaded","Statuses","LOAD","oneOf","Object","values","CARD_TYPES","main","articleClass","image","class","infoClass","favorites","offer","Card","cardType","onChnageActiveCardId","onFavoriteClick","cardTypeOptions","history","useHistory","onMouseEnter","onMouseLeave","push","xlinkHref","CardsList","cards","changeActiveCardIdHandler","React","useCallback","map","card","key","array","memo","getCards","getIsLoaded","loaded","Footer","FavoritesEmpty","FavoritesLocation","href","status","dispatch","_getState","api","post","Number","then","data","actions","dataToHotelCard","mainActions","catch","ERROR","CITIES_LIST","Favorites","index","filteredCards","filter","length","FavoritesPage","onComponentMount","useEffect","isEmpty","get","LOADED"],"mappings":"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","file":"4.bundle.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const offerPropTypes = {\n  images: PropTypes.arrayOf(PropTypes.string.isRequired),\n  isPremium: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  isFavorite: PropTypes.bool.isRequired,\n  rating: PropTypes.number.isRequired,\n  type: PropTypes.string.isRequired,\n  bedrooms: PropTypes.number.isRequired,\n  maxAdults: PropTypes.number.isRequired,\n  price: PropTypes.number.isRequired,\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired),\n  host: PropTypes.shape({\n    avatarUrl: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    isPro: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired\n  }),\n  description: PropTypes.string.isRequired\n};\n\nexport const reviewPropTypes = {\n  comment: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  rating: PropTypes.number.isRequired,\n  user: PropTypes.shape({\n    avatarUrl: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    isPro: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired\n  })\n};\n\nexport const cardPropTypes = {\n  id: PropTypes.number.isRequired,\n  isFavorite: PropTypes.bool.isRequired,\n  isPremium: PropTypes.bool.isRequired,\n  previewImage: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  rating: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  city: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })\n};\n\nexport const authInfoPropTypes = {\n  avatarUrl: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  isPro: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {authInfoPropTypes} from '../../prop-types.prop';\nimport {getUser} from '../../store/app/selectors';\nimport {logout} from '../../store/app/operations';\nimport withAuth from '../../hocs/with-auth/with-auth';\n\nconst styles = {\n  border: `none`,\n  backgroundColor: `transparent`\n};\n\nconst Header = ({isAuth, user, onLogout}) => {\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div className=\"header__wrapper\">\n          <div className=\"header__left\">\n            <Link className=\"header__logo-link header__logo-link--active\" to=\"/\">\n              <img className=\"header__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"81\" height=\"41\" />\n            </Link>\n          </div>\n          <nav className=\"header__nav\">\n            <ul className=\"header__nav-list\">\n              <li className=\"header__nav-item user\">\n                <Link className=\"header__nav-link header__nav-link--profile\" to={isAuth && `/favorites` || `/login`}>\n                  <div\n                    className=\"header__avatar-wrapper user__avatar-wrapper\"\n                    style={isAuth && {backgroundImage: user.avatarUrl} || {}}></div>\n                  <span className={isAuth && `header__user-name user__name` || `header__login`}>{isAuth && user.email || `Sign in`}</span>\n                </Link>\n              </li>\n              {isAuth &&\n                <li className=\"header__nav-item user\">\n                  <button\n                    className=\"header__nav-link header__nav-link--profile\"\n                    style={styles}\n                    onClick={() => onLogout()}\n                    data-testid=\"logout\">\n                    <span className=\"header__login\">Logout</span>\n                  </button>\n                </li>\n              }\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  user: PropTypes.shape(authInfoPropTypes),\n  onLogout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  user: getUser(state)\n});\n\nconst mapDispatchToProps = {\n  onLogout: logout\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuth\n)(Header);\nexport {\n  Header as PureHeader\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../../components/spiner/spiner';\nimport {Statuses} from '../../services/load-statuses';\n\nconst withLoading = (Component) => {\n  const WithLoading = (props) => {\n    return (\n      <>\n        {props.isLoaded === Statuses.LOAD && <Spinner />}\n        <Component {...props} />\n      </>\n    );\n  };\n\n  WithLoading.propTypes = {\n    isLoaded: PropTypes.oneOf([...Object.values(Statuses)]).isRequired\n  };\n\n  return WithLoading;\n};\n\nexport default withLoading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, useHistory} from 'react-router-dom';\nimport withAuth from '../../hocs/with-auth/with-auth';\nimport {cardPropTypes} from '../../prop-types.prop';\n\nconst RATING_PER_STAR = 20;\nconst CARD_TYPES = {\n  main: {\n    articleClass: `cities__place-card `,\n    image: {\n      class: `cities`,\n      width: 260,\n      height: 200\n    },\n    infoClass: ``\n  },\n  favorites: {\n    articleClass: `favorites__card `,\n    image: {\n      class: `favorites`,\n      width: 150,\n      height: 110\n    },\n    infoClass: `favorites__card-info `\n  },\n  offer: {\n    articleClass: `near-places__card `,\n    image: {\n      class: `near-places`,\n      width: 260,\n      height: 200\n    },\n    infoClass: ``\n  }\n};\n\nconst Card = ({isPremium, previewImage, price, isFavorite, rating, title, id, type, cardType, onChnageActiveCardId, onFavoriteClick, isAuth}) => {\n  const cardTypeOptions = CARD_TYPES[cardType];\n  const history = useHistory();\n\n  return (\n    <article\n      className={`${cardTypeOptions.articleClass}place-card`}\n      onMouseEnter={() => {\n        onChnageActiveCardId(id);\n      }}\n      onMouseLeave={() => {\n        onChnageActiveCardId(null);\n      }}>\n      {isPremium && <div className=\"place-card__mark\"><span>Premium</span></div> || ``}\n      <div className={`${cardTypeOptions.image.class}__image-wrapper place-card__image-wrapper`}>\n        <Link to={`/offer/${id}`}>\n          <img\n            className=\"place-card__image\"\n            src={previewImage}\n            width={cardTypeOptions.image.width}\n            height={cardTypeOptions.image.height}\n            alt=\"Place image\" />\n        </Link>\n      </div>\n      <div className={`${cardTypeOptions.infoClass}place-card__info`}>\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">&euro;{price}</b>\n            <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n          </div>\n          <button\n            className={`place-card__bookmark-button button${isFavorite && ` place-card__bookmark-button--active` || ``}`}\n            type=\"button\"\n            onClick={() => isAuth ? onFavoriteClick(id, !isFavorite) : history.push(`/login`)}\n            data-testid=\"to-bookmarks-button\">\n            <svg className=\"place-card__bookmark-icon\" width=\"18\" height=\"19\">\n              <use xlinkHref=\"#icon-bookmark\"></use>\n            </svg>\n            <span className=\"visually-hidden\">To bookmarks</span>\n          </button>\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={{width: `${RATING_PER_STAR * rating}%`}}></span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <h2 className=\"place-card__name\">\n          <Link to={`/offer/${id}`}>{title}</Link>\n        </h2>\n        <p className=\"place-card__type\">{type}</p>\n      </div>\n    </article>\n  );\n};\n\nCard.propTypes = {\n  ...cardPropTypes,\n  onChnageActiveCardId: PropTypes.func.isRequired,\n  onFavoriteClick: PropTypes.func.isRequired,\n  isAuth: PropTypes.bool.isRequired\n};\n\nexport default withAuth(Card);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../card/card';\n\nconst CARD_TYPES = {\n  main: `cities__places-list places__list tabs__content`,\n  favorites: `favorites__places`,\n  offer: `near-places__list places__list`\n};\n\nconst CardsList = ({cards, cardType, onChnageActiveCardId = () => {}, onFavoriteClick}) => {\n  const changeActiveCardIdHandler = React.useCallback((id) => onChnageActiveCardId(id), []);\n\n  return (\n    <div className={CARD_TYPES[cardType]}>\n      {cards.map((card) =>\n        <Card\n          cardType={cardType}\n          key={card.id}\n          onChnageActiveCardId={changeActiveCardIdHandler}\n          onFavoriteClick={onFavoriteClick}\n          {...card} />)}\n    </div>\n  );\n};\n\nCardsList.propTypes = {\n  cards: PropTypes.array.isRequired,\n  cardType: PropTypes.string.isRequired,\n  onChnageActiveCardId: PropTypes.func,\n  onFavoriteClick: PropTypes.func.isRequired\n};\n\nexport default React.memo(CardsList);\n","export const getCards = (state) => state.favorites.cards;\nexport const getIsLoaded = (state) => state.favorites.loaded;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer container\">\n      <Link className=\"footer__logo-link\" to=\"/\">\n        <img className=\"footer__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"64\" height=\"33\" />\n      </Link>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nconst FavoritesEmpty = () => {\n  return (\n    <section className=\"favorites favorites--empty\">\n      <h1 className=\"visually-hidden\">Favorites (empty)</h1>\n      <div className=\"favorites__status-wrapper\">\n        <b className=\"favorites__status\">Nothing yet saved.</b>\n        <p className=\"favorites__status-description\">Save properties to narrow down search or plan your future trips.</p>\n      </div>\n    </section>\n  );\n};\n\nexport default FavoritesEmpty;\n","import * as actions from './actions';\nimport * as mainActions from '../main/actions';\nimport {Statuses} from '../../services/load-statuses';\nimport {dataToHotelCard} from '../../services/adapters';\n\nexport const loadFavorites = () => (dispatch, _getState, api) => {\n  dispatch(actions.setLoaded(Statuses.LOAD));\n  return api.get(`favorite`)\n    .then(({data}) => {\n      dispatch(actions.setCards(data.map(dataToHotelCard)));\n      dispatch(actions.setLoaded(Statuses.LOADED));\n    })\n    .catch(() => {\n      dispatch(actions.setLoaded(Statuses.ERROR));\n    });\n};\n\nexport const changeFavorite = (id, status) => (dispatch, _getState, api) => {\n  return api.post(`favorite/${id}/${Number(status)}`)\n    .then(({data}) => {\n      dispatch(actions.changeCard(dataToHotelCard(data)));\n      dispatch(mainActions.changeCard(dataToHotelCard(data)));\n    })\n    .catch(() => {\n      dispatch(actions.setLoaded(Statuses.ERROR));\n    });\n};\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport CardsList from '../cards-list/cards-list';\nimport {changeFavorite} from '../../store/favorites/operations';\n\nconst FavoritesLocation = ({city, cards, onFavoriteClick}) => {\n  return (\n    <li className=\"favorites__locations-items\">\n      <div className=\"favorites__locations locations locations--current\">\n        <div className=\"locations__item\">\n          <a className=\"locations__item-link\" href=\"#\">\n            <span>{city}</span>\n          </a>\n        </div>\n      </div>\n      <CardsList cards={cards} cardType=\"favorites\" onFavoriteClick={onFavoriteClick} />\n    </li>\n  );\n};\n\nFavoritesLocation.propTypes = {\n  city: PropTypes.string.isRequired,\n  cards: PropTypes.array.isRequired,\n  onFavoriteClick: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = {\n  onFavoriteClick: changeFavorite\n};\n\nexport default connect(null, mapDispatchToProps)(FavoritesLocation);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FavoritesLocation from '../favorites-location/favorites-location';\n\nconst CITIES_LIST = [`Paris`, `Cologne`, `Brussels`, `Amsterdam`, `Hamburg`, `Dusseldorf`];\n\nconst Favorites = ({cards}) => {\n  return (\n    <section className=\"favorites\">\n      <h1 className=\"favorites__title\">Saved listing</h1>\n      <ul className=\"favorites__list\">\n        {\n          CITIES_LIST.map(\n              (city, index) => {\n                const filteredCards = cards.filter((card) => card.city.name === city);\n                return filteredCards.length < 1 ? `` : <FavoritesLocation city={city} cards={filteredCards} key={`favorite-city-${index}`} />;\n              })\n        }\n      </ul>\n    </section>\n  );\n};\n\nFavorites.propTypes = {\n  cards: PropTypes.array.isRequired\n};\n\nexport default Favorites;\n","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport PropTypes from 'prop-types';\nimport {getCards, getIsLoaded} from '../../../store/favorites/selectors';\nimport Header from '../../header/header';\nimport Footer from '../../footer/footer';\nimport FavoritesEmpty from '../../favorites-empty/favorites-empty';\nimport Favorites from '../../favorites/favorites';\nimport {loadFavorites} from '../../../store/favorites/operations';\nimport withLoading from '../../../hocs/with-loading/with-loading';\n\nconst FavoritesPage = ({cards, onComponentMount}) => {\n  useEffect(() => {\n    onComponentMount();\n  }, []);\n\n  const isEmpty = !cards.length;\n\n  return (\n    <div className={`page${isEmpty && ` page--favorites-empty` || ``}`}>\n      <Header />\n      <main className={`page__main page__main--favorites${isEmpty && ` page__main--favorites-empty` || ``}`}>\n        <div className=\"page__favorites-container container\">\n          {isEmpty\n            && <FavoritesEmpty />\n            || <Favorites cards={cards} />}\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nFavoritesPage.propTypes = {\n  cards: PropTypes.array.isRequired,\n  onComponentMount: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  cards: getCards(state),\n  isLoaded: getIsLoaded(state)\n});\n\nconst mapDispatchToProps = {\n  onComponentMount: loadFavorites\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withLoading\n)(FavoritesPage);\n"],"sourceRoot":""}