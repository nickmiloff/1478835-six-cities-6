{"version":3,"sources":["webpack:///./src/prop-types.prop.js","webpack:///./src/components/header/header.jsx","webpack:///./src/components/login-form/login-form.jsx","webpack:///./src/components/pages/login-page/login-page.jsx"],"names":["offerPropTypes","images","PropTypes","arrayOf","string","isRequired","isPremium","bool","title","isFavorite","rating","number","type","bedrooms","maxAdults","price","goods","host","shape","avatarUrl","id","isPro","name","description","reviewPropTypes","comment","date","user","cardPropTypes","previewImage","city","authInfoPropTypes","email","styles","border","backgroundColor","Header","isAuth","onLogout","className","to","src","alt","width","height","style","backgroundImage","onClick","data-testid","propTypes","func","mapDispatchToProps","logout","compose","connect","state","getUser","withAuth","LoginForm","onSubmit","setEmail","useState","password","setPassword","action","method","evt","preventDefault","placeholder","required","autoComplete","value","onChange","target","login","LoginPage","href"],"mappings":"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","file":"5.bundle.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const offerPropTypes = {\n  images: PropTypes.arrayOf(PropTypes.string.isRequired),\n  isPremium: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  isFavorite: PropTypes.bool.isRequired,\n  rating: PropTypes.number.isRequired,\n  type: PropTypes.string.isRequired,\n  bedrooms: PropTypes.number.isRequired,\n  maxAdults: PropTypes.number.isRequired,\n  price: PropTypes.number.isRequired,\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired),\n  host: PropTypes.shape({\n    avatarUrl: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    isPro: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired\n  }),\n  description: PropTypes.string.isRequired\n};\n\nexport const reviewPropTypes = {\n  comment: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  rating: PropTypes.number.isRequired,\n  user: PropTypes.shape({\n    avatarUrl: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    isPro: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired\n  })\n};\n\nexport const cardPropTypes = {\n  id: PropTypes.number.isRequired,\n  isFavorite: PropTypes.bool.isRequired,\n  isPremium: PropTypes.bool.isRequired,\n  previewImage: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  rating: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  city: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })\n};\n\nexport const authInfoPropTypes = {\n  avatarUrl: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  isPro: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {authInfoPropTypes} from '../../prop-types.prop';\nimport {getUser} from '../../store/app/selectors';\nimport {logout} from '../../store/app/operations';\nimport withAuth from '../../hocs/with-auth/with-auth';\n\nconst styles = {\n  border: `none`,\n  backgroundColor: `transparent`\n};\n\nconst Header = ({isAuth, user, onLogout}) => {\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div className=\"header__wrapper\">\n          <div className=\"header__left\">\n            <Link className=\"header__logo-link header__logo-link--active\" to=\"/\">\n              <img className=\"header__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"81\" height=\"41\" />\n            </Link>\n          </div>\n          <nav className=\"header__nav\">\n            <ul className=\"header__nav-list\">\n              <li className=\"header__nav-item user\">\n                <Link className=\"header__nav-link header__nav-link--profile\" to={isAuth && `/favorites` || `/login`}>\n                  <div\n                    className=\"header__avatar-wrapper user__avatar-wrapper\"\n                    style={isAuth && {backgroundImage: user.avatarUrl} || {}}></div>\n                  <span className={isAuth && `header__user-name user__name` || `header__login`}>{isAuth && user.email || `Sign in`}</span>\n                </Link>\n              </li>\n              {isAuth &&\n                <li className=\"header__nav-item user\">\n                  <button\n                    className=\"header__nav-link header__nav-link--profile\"\n                    style={styles}\n                    onClick={() => onLogout()}\n                    data-testid=\"logout\">\n                    <span className=\"header__login\">Logout</span>\n                  </button>\n                </li>\n              }\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  user: PropTypes.shape(authInfoPropTypes),\n  onLogout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  user: getUser(state)\n});\n\nconst mapDispatchToProps = {\n  onLogout: logout\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuth\n)(Header);\nexport {\n  Header as PureHeader\n};\n","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {login} from '../../store/app/operations';\n\nconst LoginForm = ({onSubmit}) => {\n  const [email, setEmail] = useState(``);\n  const [password, setPassword] = useState(``);\n\n  return (\n    <form\n      className=\"login__form form\"\n      action=\"#\"\n      method=\"post\"\n      onSubmit={(evt) => {\n        evt.preventDefault();\n        onSubmit({email, password});\n      }}\n      data-testid=\"form\">\n      <div className=\"login__input-wrapper form__input-wrapper\">\n        <label className=\"visually-hidden\">E-mail</label>\n        <input\n          className=\"login__input form__input\"\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          required={true}\n          autoComplete=\"on\"\n          value={email}\n          onChange={(evt) => {\n            setEmail(evt.target.value);\n          }}\n          data-testid=\"email\" />\n      </div>\n      <div className=\"login__input-wrapper form__input-wrapper\">\n        <label className=\"visually-hidden\">Password</label>\n        <input\n          className=\"login__input form__input\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          required={true}\n          autoComplete=\"on\"\n          value={password}\n          onChange={(evt) => {\n            setPassword(evt.target.value);\n          }}\n          data-testid=\"password\" />\n      </div>\n      <button className=\"login__submit form__submit button\" type=\"submit\">Sign in</button>\n    </form>\n  );\n};\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = {\n  onSubmit: login\n};\n\nexport default connect(null, mapDispatchToProps)(LoginForm);\nexport {\n  LoginForm as PureLoginForm\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../../header/header';\nimport LoginForm from '../../login-form/login-form';\nimport withAuth from '../../../hocs/with-auth/with-auth';\nimport {Redirect} from 'react-router-dom';\n\nconst LoginPage = ({isAuth}) => {\n  if (isAuth) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"page page--gray page--login\">\n      <Header />\n      <main className=\"page__main page__main--login\">\n        <div className=\"page__login-container container\">\n          <section className=\"login\">\n            <h1 className=\"login__title\">Sign in</h1>\n            <LoginForm />\n          </section>\n          <section className=\"locations locations--login locations--current\">\n            <div className=\"locations__item\">\n              <a className=\"locations__item-link\" href=\"#\">\n                <span>Amsterdam</span>\n              </a>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nLoginPage.propTypes = {\n  isAuth: PropTypes.bool.isRequired\n};\n\nexport default withAuth(LoginPage);\n"],"sourceRoot":""}