{"version":3,"sources":["webpack:///./src/prop-types.prop.js","webpack:///./src/components/header/header.jsx","webpack:///./src/hocs/with-loading/with-loading.jsx","webpack:///./src/components/card/card.jsx","webpack:///./src/components/cards-list/cards-list.jsx","webpack:///./src/components/map/map.jsx","webpack:///./src/store/main/selectors.js","webpack:///./src/components/locations/locations.jsx","webpack:///./src/components/places-sorting/places-sorting.jsx","webpack:///./src/components/places/places.jsx","webpack:///./src/components/places-empty/places-empty.jsx","webpack:///./src/components/cities/cities.jsx","webpack:///./src/components/pages/main-page/main-page.jsx"],"names":["offerPropTypes","images","PropTypes","arrayOf","string","isRequired","isPremium","bool","title","isFavorite","rating","number","type","bedrooms","maxAdults","price","goods","host","shape","avatarUrl","id","isPro","name","description","reviewPropTypes","comment","date","user","cardPropTypes","previewImage","city","authInfoPropTypes","email","styles","border","backgroundColor","Header","isAuth","onLogout","className","to","src","alt","width","height","style","backgroundImage","onClick","data-testid","propTypes","func","mapDispatchToProps","logout","compose","connect","state","getUser","withAuth","withLoading","Component","WithLoading","props","isLoaded","Statuses","LOAD","oneOf","Object","values","CARD_TYPES","main","articleClass","image","class","infoClass","favorites","offer","Card","cardType","onChnageActiveCardId","onFavoriteClick","cardTypeOptions","history","useHistory","onMouseEnter","onMouseLeave","push","xlinkHref","CardsList","cards","changeActiveCardIdHandler","React","useCallback","map","card","key","array","memo","MAP_TYPES","CITIES","Amsterdam","Paris","Cologne","Brussels","Hamburg","Dusseldorf","STYLE","INITIAL_SETTINGS","zoom","zoomControl","marker","ICON","leaflet","icon","iconUrl","iconSize","ACTIVE_ICON","setMarkers","activeCardId","forEach","lat","location","latitude","lon","longitude","addTo","removeMarkers","eachLayer","layer","Marker","remove","Map","activeLocation","useRef","currentCity","currentType","useEffect","current","center","tileLayer","attribution","flyTo","LatLng","JSON","stringify","ref","oneOfType","getLocation","getType","getIsLoaded","loaded","getCards","createSelector","suitableCards","filter","sort","a","b","LOCATIONS","Locations","changeLocation","index","OPTIONS","PlacesSorting","activeOption","onChangeOption","isOpen","setIsOpen","useState","action","method","tabIndex","option","setType","Places","setActiveCardId","length","changeFavorite","PlacesEmpty","Cities","isEmpty","MainPage","onChangeLocation","setLocation"],"mappings":"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","file":"2.bundle.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const offerPropTypes = {\n  images: PropTypes.arrayOf(PropTypes.string.isRequired),\n  isPremium: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  isFavorite: PropTypes.bool.isRequired,\n  rating: PropTypes.number.isRequired,\n  type: PropTypes.string.isRequired,\n  bedrooms: PropTypes.number.isRequired,\n  maxAdults: PropTypes.number.isRequired,\n  price: PropTypes.number.isRequired,\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired),\n  host: PropTypes.shape({\n    avatarUrl: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    isPro: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired\n  }),\n  description: PropTypes.string.isRequired\n};\n\nexport const reviewPropTypes = {\n  comment: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  rating: PropTypes.number.isRequired,\n  user: PropTypes.shape({\n    avatarUrl: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    isPro: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired\n  })\n};\n\nexport const cardPropTypes = {\n  id: PropTypes.number.isRequired,\n  isFavorite: PropTypes.bool.isRequired,\n  isPremium: PropTypes.bool.isRequired,\n  previewImage: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  rating: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  city: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })\n};\n\nexport const authInfoPropTypes = {\n  avatarUrl: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  isPro: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {authInfoPropTypes} from '../../prop-types.prop';\nimport {getUser} from '../../store/app/selectors';\nimport {logout} from '../../store/app/operations';\nimport withAuth from '../../hocs/with-auth/with-auth';\n\nconst styles = {\n  border: `none`,\n  backgroundColor: `transparent`\n};\n\nconst Header = ({isAuth, user, onLogout}) => {\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div className=\"header__wrapper\">\n          <div className=\"header__left\">\n            <Link className=\"header__logo-link header__logo-link--active\" to=\"/\">\n              <img className=\"header__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"81\" height=\"41\" />\n            </Link>\n          </div>\n          <nav className=\"header__nav\">\n            <ul className=\"header__nav-list\">\n              <li className=\"header__nav-item user\">\n                <Link className=\"header__nav-link header__nav-link--profile\" to={isAuth && `/favorites` || `/login`}>\n                  <div\n                    className=\"header__avatar-wrapper user__avatar-wrapper\"\n                    style={isAuth && {backgroundImage: user.avatarUrl} || {}}></div>\n                  <span className={isAuth && `header__user-name user__name` || `header__login`}>{isAuth && user.email || `Sign in`}</span>\n                </Link>\n              </li>\n              {isAuth &&\n                <li className=\"header__nav-item user\">\n                  <button\n                    className=\"header__nav-link header__nav-link--profile\"\n                    style={styles}\n                    onClick={() => onLogout()}\n                    data-testid=\"logout\">\n                    <span className=\"header__login\">Logout</span>\n                  </button>\n                </li>\n              }\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  user: PropTypes.shape(authInfoPropTypes),\n  onLogout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  user: getUser(state)\n});\n\nconst mapDispatchToProps = {\n  onLogout: logout\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuth\n)(Header);\nexport {\n  Header as PureHeader\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../../components/spiner/spiner';\nimport {Statuses} from '../../services/load-statuses';\n\nconst withLoading = (Component) => {\n  const WithLoading = (props) => {\n    return (\n      <>\n        {props.isLoaded === Statuses.LOAD && <Spinner />}\n        <Component {...props} />\n      </>\n    );\n  };\n\n  WithLoading.propTypes = {\n    isLoaded: PropTypes.oneOf([...Object.values(Statuses)]).isRequired\n  };\n\n  return WithLoading;\n};\n\nexport default withLoading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, useHistory} from 'react-router-dom';\nimport withAuth from '../../hocs/with-auth/with-auth';\nimport {cardPropTypes} from '../../prop-types.prop';\n\nconst RATING_PER_STAR = 20;\nconst CARD_TYPES = {\n  main: {\n    articleClass: `cities__place-card `,\n    image: {\n      class: `cities`,\n      width: 260,\n      height: 200\n    },\n    infoClass: ``\n  },\n  favorites: {\n    articleClass: `favorites__card `,\n    image: {\n      class: `favorites`,\n      width: 150,\n      height: 110\n    },\n    infoClass: `favorites__card-info `\n  },\n  offer: {\n    articleClass: `near-places__card `,\n    image: {\n      class: `near-places`,\n      width: 260,\n      height: 200\n    },\n    infoClass: ``\n  }\n};\n\nconst Card = ({isPremium, previewImage, price, isFavorite, rating, title, id, type, cardType, onChnageActiveCardId, onFavoriteClick, isAuth}) => {\n  const cardTypeOptions = CARD_TYPES[cardType];\n  const history = useHistory();\n\n  return (\n    <article\n      className={`${cardTypeOptions.articleClass}place-card`}\n      onMouseEnter={() => {\n        onChnageActiveCardId(id);\n      }}\n      onMouseLeave={() => {\n        onChnageActiveCardId(null);\n      }}>\n      {isPremium && <div className=\"place-card__mark\"><span>Premium</span></div> || ``}\n      <div className={`${cardTypeOptions.image.class}__image-wrapper place-card__image-wrapper`}>\n        <Link to={`/offer/${id}`}>\n          <img\n            className=\"place-card__image\"\n            src={previewImage}\n            width={cardTypeOptions.image.width}\n            height={cardTypeOptions.image.height}\n            alt=\"Place image\" />\n        </Link>\n      </div>\n      <div className={`${cardTypeOptions.infoClass}place-card__info`}>\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">&euro;{price}</b>\n            <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n          </div>\n          <button\n            className={`place-card__bookmark-button button${isFavorite && ` place-card__bookmark-button--active` || ``}`}\n            type=\"button\"\n            onClick={() => isAuth ? onFavoriteClick(id, !isFavorite) : history.push(`/login`)}\n            data-testid=\"to-bookmarks-button\">\n            <svg className=\"place-card__bookmark-icon\" width=\"18\" height=\"19\">\n              <use xlinkHref=\"#icon-bookmark\"></use>\n            </svg>\n            <span className=\"visually-hidden\">To bookmarks</span>\n          </button>\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={{width: `${RATING_PER_STAR * rating}%`}}></span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <h2 className=\"place-card__name\">\n          <Link to={`/offer/${id}`}>{title}</Link>\n        </h2>\n        <p className=\"place-card__type\">{type}</p>\n      </div>\n    </article>\n  );\n};\n\nCard.propTypes = {\n  ...cardPropTypes,\n  onChnageActiveCardId: PropTypes.func.isRequired,\n  onFavoriteClick: PropTypes.func.isRequired,\n  isAuth: PropTypes.bool.isRequired\n};\n\nexport default withAuth(Card);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../card/card';\n\nconst CARD_TYPES = {\n  main: `cities__places-list places__list tabs__content`,\n  favorites: `favorites__places`,\n  offer: `near-places__list places__list`\n};\n\nconst CardsList = ({cards, cardType, onChnageActiveCardId = () => {}, onFavoriteClick}) => {\n  const changeActiveCardIdHandler = React.useCallback((id) => onChnageActiveCardId(id), []);\n\n  return (\n    <div className={CARD_TYPES[cardType]}>\n      {cards.map((card) =>\n        <Card\n          cardType={cardType}\n          key={card.id}\n          onChnageActiveCardId={changeActiveCardIdHandler}\n          onFavoriteClick={onFavoriteClick}\n          {...card} />)}\n    </div>\n  );\n};\n\nCardsList.propTypes = {\n  cards: PropTypes.array.isRequired,\n  cardType: PropTypes.string.isRequired,\n  onChnageActiveCardId: PropTypes.func,\n  onFavoriteClick: PropTypes.func.isRequired\n};\n\nexport default React.memo(CardsList);\n","import React, {useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport leaflet from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport {cardPropTypes} from '../../prop-types.prop';\n\nconst MAP_TYPES = {\n  main: `cities__map`,\n  offer: `property__map`\n};\n\nconst CITIES = {\n  Amsterdam: [52.3833, 4.9044],\n  Paris: [48.8589, 2.3469],\n  Cologne: [50.9293, 6.9595],\n  Brussels: [50.8552, 4.3453],\n  Hamburg: [53.5503, 10.0006],\n  Dusseldorf: [51.2287, 6.7743]\n};\n\nconst STYLE = {\n  width: `100%`,\n  height: `100%`\n};\n\nconst INITIAL_SETTINGS = {\n  zoom: 12,\n  zoomControl: false,\n  marker: true\n};\n\nconst ICON = leaflet.icon({\n  iconUrl: `img/pin.svg`,\n  iconSize: [30, 30]\n});\n\nconst ACTIVE_ICON = leaflet.icon({\n  iconUrl: `img/pin-active.svg`,\n  iconSize: [30, 30]\n});\n\nconst setMarkers = (map, cards, activeCardId) => {\n  cards.forEach((card) => {\n    leaflet\n      .marker({\n        lat: card.location.latitude,\n        lon: card.location.longitude\n      }, {icon: card.id === activeCardId ? ACTIVE_ICON : ICON})\n      .addTo(map);\n  });\n};\n\nconst removeMarkers = (map) => {\n  map.eachLayer(function (layer) {\n    if (layer instanceof leaflet.Marker) {\n      layer.remove();\n    }\n  });\n};\n\nconst Map = ({activeLocation, cards, activeCardId, type}) => {\n  const map = useRef();\n  const currentCity = CITIES[activeLocation] || activeLocation;\n  const currentType = MAP_TYPES[type];\n\n  useEffect(() => {\n    map.current = leaflet.map(`map`, {\n      center: currentCity,\n      ...INITIAL_SETTINGS\n    });\n\n    leaflet\n      .tileLayer(`https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png`, {\n        attribution: `&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>`\n      })\n      .addTo(map.current);\n\n    setMarkers(map.current, cards, activeCardId);\n\n    return () => {\n      map.current.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    map.current.flyTo(new leaflet.LatLng(...currentCity), INITIAL_SETTINGS.zoom);\n    removeMarkers(map.current);\n    setMarkers(map.current, cards, activeCardId);\n  }, [JSON.stringify(cards)]);\n\n  useEffect(() => {\n    removeMarkers(map.current);\n    setMarkers(map.current, cards, activeCardId);\n  }, [activeCardId]);\n\n  return (\n    <section className={`${currentType} map`}>\n      <div id=\"map\" style={STYLE} ref={map}></div>\n    </section>\n  );\n};\n\nMap.propTypes = {\n  activeLocation: PropTypes.oneOfType([PropTypes.array, PropTypes.string]).isRequired,\n  cards: PropTypes.arrayOf(PropTypes.shape(cardPropTypes)),\n  activeCardId: PropTypes.number,\n  type: PropTypes.string.isRequired\n};\n\nexport default React.memo(Map);\n","import {createSelector} from 'reselect';\n\nexport const getLocation = (state) => state.main.location;\nexport const getAllCards = (state) => state.main.cards;\nexport const getType = (state) => state.main.type;\nexport const getIsLoaded = (state) => state.main.loaded;\n\nexport const getCards = createSelector(\n    [getLocation, getAllCards, getType],\n    (location, cards, type) => {\n      const suitableCards = cards.filter((card) => card.city.name === location);\n\n      switch (type) {\n        case `Price: high to low`:\n          return suitableCards.sort((a, b) => b.price - a.price);\n\n        case `Price: low to high`:\n          return suitableCards.sort((a, b) => a.price - b.price);\n\n        case `Top rated first`:\n          return suitableCards.sort((a, b) => b.rating - a.rating);\n\n        default:\n          return suitableCards;\n      }\n    }\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LOCATIONS = [`Paris`, `Cologne`, `Brussels`, `Amsterdam`, `Hamburg`, `Dusseldorf`];\n\nconst Locations = ({activeLocation, changeLocation}) => {\n  return (\n    <section className=\"locations container\">\n      <ul className=\"locations__list tabs__list\">\n        {LOCATIONS.map((location, index) =>\n          <li className=\"locations__item\" key={`location-${index}`}>\n            <a\n              className={`locations__item-link tabs__item${location === activeLocation && ` tabs__item--active` || ``}`}\n              onClick={() => {\n                changeLocation(location);\n              }}\n              data-testid=\"tab-link\">\n              <span>{location}</span>\n            </a>\n          </li>\n        )}\n      </ul>\n    </section>\n  );\n};\n\nLocations.propTypes = {\n  activeLocation: PropTypes.string.isRequired,\n  changeLocation: PropTypes.func.isRequired\n};\n\nexport default Locations;\n","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {getType} from '../../store/main/selectors';\nimport {setType} from '../../store/main/actions';\n\nconst OPTIONS = [`Popular`, `Price: low to high`, `Price: high to low`, `Top rated first`];\n\nconst PlacesSorting = ({activeOption, onChangeOption}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <form className=\"places__sorting\" action=\"#\" method=\"get\">\n      <span className=\"places__sorting-caption\">Sort by</span>\n      <span\n        className=\"places__sorting-type\"\n        tabIndex=\"0\"\n        onClick={() => {\n          setIsOpen((current) => !current);\n        }}\n        data-testid=\"options-button\">\n        {activeOption}\n        <svg className=\"places__sorting-arrow\" width=\"7\" height=\"4\">\n          <use xlinkHref=\"#icon-arrow-select\"></use>\n        </svg>\n      </span>\n      <ul\n        className={`places__options places__options--custom${isOpen && ` places__options--opened` || ``}`}\n        data-testid=\"options-container\">\n        {OPTIONS.map((option, index) =>\n          <li\n            className={`places__option${option === activeOption && ` places__option--active\"` || ``}`}\n            tabIndex=\"0\"\n            key={`places-option-${index}`}\n            onClick={() => {\n              onChangeOption(option);\n              setIsOpen(false);\n            }}\n            data-testid=\"option\">\n            {option}\n          </li>\n        )}\n      </ul>\n    </form>\n  );\n};\n\nPlacesSorting.propTypes = {\n  activeOption: PropTypes.string.isRequired,\n  onChangeOption: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  activeOption: getType(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeOption: setType\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlacesSorting);\nexport {\n  PlacesSorting as PurePlacesSorting\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport CardsList from '../cards-list/cards-list';\nimport PlacesSorting from '../places-sorting/places-sorting';\nimport {changeFavorite} from '../../store/main/operations';\n\nconst Places = ({cards, location, setActiveCardId, onFavoriteClick}) => {\n  return (\n    <section className=\"cities__places places\">\n      <h2 className=\"visually-hidden\">Places</h2>\n      <b className=\"places__found\">{cards.length} places to stay in {location}</b>\n      <PlacesSorting />\n      <CardsList cards={cards} cardType=\"main\" onChnageActiveCardId={setActiveCardId} onFavoriteClick={onFavoriteClick} />\n    </section>\n  );\n};\n\nPlaces.propTypes = {\n  location: PropTypes.string.isRequired,\n  cards: PropTypes.array.isRequired,\n  setActiveCardId: PropTypes.func.isRequired,\n  onFavoriteClick: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = {\n  onFavoriteClick: changeFavorite\n};\n\nexport default connect(null, mapDispatchToProps)(Places);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PlacesEmpty = ({location}) => {\n  return (\n    <section className=\"cities__no-places\">\n      <div className=\"cities__status-wrapper tabs__content\">\n        <b className=\"cities__status\">No places to stay available</b>\n        <p className=\"cities__status-description\">We could not find any property available at the moment in {location}</p>\n      </div>\n    </section>\n  );\n};\n\nPlacesEmpty.propTypes = {\n  location: PropTypes.string.isRequired\n};\n\nexport default PlacesEmpty;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Places from '../places/places';\nimport PlacesEmpty from '../places-empty/places-empty';\nimport Map from '../map/map';\n\nconst Cities = ({cards, location, isEmpty}) => {\n  const [activeCardId, setActiveCardId] = useState(null);\n\n  return (\n    <div className=\"cities\">\n      <div className={`cities__places-container container${isEmpty && ` cities__places-container--empty` || ``}`}>\n        {isEmpty\n          && <PlacesEmpty location={location} />\n          || <Places cards={cards} location={location} setActiveCardId={setActiveCardId} />}\n        <div className=\"cities__right-section\">\n          {!isEmpty\n            && <Map cards={cards} activeLocation={location} activeCardId={activeCardId} type=\"main\" />\n            || ``}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCities.propTypes = {\n  location: PropTypes.string.isRequired,\n  cards: PropTypes.array.isRequired,\n  isEmpty: PropTypes.bool.isRequired\n};\n\nexport default Cities;\n","import React from 'react';\nimport {compose} from 'redux';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {getCards, getIsLoaded, getLocation} from '../../../store/main/selectors';\nimport {setLocation} from '../../../store/main/actions';\nimport Header from '../../header/header';\nimport Locations from '../../locations/locations';\nimport Cities from '../../cities/cities';\nimport withLoading from '../../../hocs/with-loading/with-loading';\n\nconst MainPage = ({location, cards, onChangeLocation}) => {\n  const isEmpty = !cards.length;\n\n  return (\n    <div className=\"page page--gray page--main\">\n      <Header />\n      <main className={`page__main page__main--index${isEmpty && ` page__main--index-empty` || ``}`}>\n        <h1 className=\"visually-hidden\">Cities</h1>\n        <div className=\"tabs\">\n          <Locations activeLocation={location} changeLocation={onChangeLocation} />\n        </div>\n        <Cities cards={cards} location={location} isEmpty={isEmpty} />\n      </main>\n    </div>\n  );\n};\n\nMainPage.propTypes = {\n  location: PropTypes.string.isRequired,\n  cards: PropTypes.array.isRequired,\n  onChangeLocation: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  location: getLocation(state),\n  cards: getCards(state),\n  isLoaded: getIsLoaded(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeLocation: setLocation\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withLoading\n)(MainPage);\n"],"sourceRoot":""}